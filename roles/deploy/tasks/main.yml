---
- include_vars: ../../lens/defaults/main.yml

- set_fact: this_release_path={{ lens_web_releases_dir }}/{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}

- debug: msg='New release path {{ this_release_path }}'

- name: Create new release dir
  file: path={{ this_release_path }} state=directory

- name: Update code
  git: repo={{ lens_web_repo }} dest={{ this_release_path }} version={{ lens_web_branch }} accept_hostkey=yes
  register: git

- debug: msg='Updated repo from {{ git.before }} to {{ git.after }}'

- name: Delete log directory
  file: path={{ this_release_path }}/log state=absent

- name: Symlink shared files
  file: src={{ lens_web_shared_dir }}/{{ item }} dest={{ this_release_path }}/{{ item }} state=link force=yes
  with_items:
    - config/database.yml
    - config/secrets.yml
    - config/unicorn.rb
    - log
    - vendor/bundle

- name: Install bundle
  shell: $SHELL -lc 'bundle install --deployment --without="development test"'
  args:
    chdir: '{{ this_release_path }}'

- name: Precompile assets
  shell: $SHELL -lc "bundle exec rake assets:precompile"
  args:
    chdir: '{{ this_release_path }}'
  environment:
    RAILS_ENV: '{{ lens_env }}'

- name: Migrate database
  shell: $SHELL -lc "bundle exec rake db:migrate"
  args:
    chdir: '{{ this_release_path }}'
  environment:
    RAILS_ENV: '{{ lens_env }}'

- name: Symlink new release
  file: src={{ this_release_path }} dest={{ lens_web_run_path_dir }} state=link force=yes

- name: Restart services
  shell: $SHELL -lc "sudo /usr/bin/sv restart /etc/service/lens-*"

- name: Cleanup
  shell: "ls -1t {{ lens_web_releases_dir }}|tail -n +{{ keep_releases + 1 }}|xargs rm -rf"
  args:
    chdir: '{{ lens_web_releases_dir }}'
